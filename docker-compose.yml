version: '3.1'
services:
   auth-service:
    restart: always
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile.dev
    env_file:
      - ./apps/auth/.env
    container_name: auth-service
    networks:
      - new_network
    depends_on:
      - auth-data
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '5000:5000'
   community-service:
    restart: always
    build:
      context: .
      dockerfile: ./apps/community/Dockerfile.dev
    env_file:
      - ./apps/community/.env
    container_name: community-service
    networks:
      - new_network
    depends_on:
      - community-data
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'
   rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    networks:
      - new_network
    ports:
      - '5672:5672'
   auth-data:
    image: postgres:latest
    restart: always
    container_name: auth-database
    environment:
      POSTGRES_USER: roixy
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: Auth
    networks:
      - new_network
    ports:
      - '5432:5432'
    volumes:
      - auth-data:/var/lib/postgresql/data
   community-data:
    image: postgres:latest
    restart: always
    container_name: community-database
    environment:
      POSTGRES_USER: roixy
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: Community
    networks:
      - new_network
    ports:
      - '5433:5432'
    volumes:
      - community-data:/var/lib/postgresql/data
volumes:
  auth-data:
  community-data:
networks:
  new_network: